 ------------Punto 1 creado en vistas---------
	
CREATE OR REPLACE VIEW Search_history AS
    SELECT VEHICLES.ID_VEHICLE, VEHICLES.VEHICLE_STATUS AS ACTUAL_STATUS, BILLS.DATEOFBILL, BILL_DETAILS.VEHICLE_STATUS AS LAST_STATUS
    FROM VEHICLES INNER JOIN BILL_DETAILS ON VEHICLES.ID_VEHICLE = BILL_DETAILS.ID_VEHICLE INNER JOIN BILLS ON BILL_DETAILS.ID_BILLS = BILLS.ID
    ORDER BY BILLS.DATEOFBILL;
    
SELECT * FROM SEARCH_HISTORY WHERE ID_VEHICLE = 70;
	
-------------Punto2------------------------------
	
ALTER TABLE accesories ADD (
units_available NUMBER
);

-----------------------------PUNTO3----------------------------------------------

CREATE VIEW UNITS_AVAILABLE_UNDER_5 AS
SELECT ACCESORIES.ID_ACCESORY, ACCESORIES.ACCESORY_DESCRIPTION, ACCESORIES.ID_MANUFACTER,MANUFACTERS.MANUFACTERNAME,ACCESORIES.UNITS_AVAILABLE FROM ACCESORIES INNER JOIN MANUFACTERS ON ACCESORIES.ID_MANUFACTER = MANUFACTERS.ID_MANUFACTER
    WHERE ACCESORIES.UNITS_AVAILABLE < 5;

SELECT * FROM UNITS_AVAILABLE_UNDER_5

-----------------------PUNTO4-------------------------------------------------------

CREATE OR REPLACE TRIGGER UPDATING_QTY_ACCESORIES AFTER INSERT ON BILL_DETAILS
FOR EACH ROW
BEGIN
    UPDATE ACCESORIES SET ACCESORIES.UNITS_AVAILABLE = UNITS_AVAILABLE - :new.QTY_ACCESORIES
    WHERE ID_ACCESORY = :new.ID_ACCESORIES;
END;

INSERT INTO BILL_DETAILS (ID,ID_BILLS,ID_VEHICLE,ID_ACCESORIES,VEHICLE_STATUS,QTY_ACCESORIES) VALUES (101,199,80,126,'SOLD',3);

--------------------------PUNTO5--------------------------------------------------------------

CREATE OR REPLACE PROCEDURE REORDER_UNITS AS
BEGIN
   UPDATE UNITS_AVAILABLE_UNDER_5 SET UNITS_AVAILABLE = UNITS_AVAILABLE + 20;
END;

EXEC REORDER_UNITS();

---------------------------------------------PUNTO6-------------------------------------------------------

CREATE OR REPLACE VIEW IMPRESION_BILLS AS
SELECT BILLS.ID AS ID_BILL,SALES_PERSONS.ID_SALES_PERSON ,SALES_PERSONS.NAME AS SALES_PERSON_NAME,CUSTOMERS.ID_CUSTOMER,CUSTOMERS.NAME_CUSTOMER,VEHICLES.ID_VEHICLE,VEHICLES.VEHICLE_STATUS,
MANUFACTERS.ID_MANUFACTER,MANUFACTERS.MANUFACTERNAME,BILL_DETAILS.ID_ACCESORIES, ACCESORIES.ACCESORY_DESCRIPTION, BILLS.DATEOFBILL,BILLS.TOTALCOST
FROM BILLS 
    INNER JOIN CUSTOMERS ON BILLS.ID_CUSTOMERS = CUSTOMERS.ID_CUSTOMER 
    INNER JOIN SALES_PERSONS ON BILLS.ID_SALES_PERSON = SALES_PERSONS.ID_SALES_PERSON
    INNER JOIN BILL_DETAILS ON BILL_DETAILS.ID_BILLS = BILLS.ID
    INNER JOIN VEHICLES ON VEHICLES.ID_VEHICLE = BILL_DETAILS.ID_VEHICLE
    INNER JOIN MANUFACTERS ON MANUFACTERS.ID_MANUFACTER = VEHICLES.ID_MANUFACTER
    INNER JOIN ACCESORIES ON ACCESORIES.ID_ACCESORY = BILL_DETAILS.ID_ACCESORIES;


SELECT * FROM IMPRESION_BILLS WHERE ID_BILL = 160 -- OR ANY NUMBER BILL----;

-----------------------------------------------PUNTO7------------------------------------------------------------------------

EXPLAIN PLAN 
    SET statement_id ='ex_plain_assignment2' FOR
    SELECT * FROM IMPRESION_BILLS;
	
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY);


	
